LIBRARY TREE

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


Library tree is a Spider Monkey panel media library viewer


REQUIREMENTS

Spider Monkey Panel 1.2.1+
FontAwesome: https://github.com/FortAwesome/Font-Awesome/blob/fa-4/fonts/fontawesome-webfont.ttf?raw=true


INSTALLATION

Add a Spider Monkey Panel to the layout in the usual way. Click the Spider Monkey panel (or right click and choose configure) to open the editor. Use the File menu to import the Library Tree script

Checkout "Quick Setup" for traditional and modern style presets (right click > settings > options). New installs load the modern style preset


UPDATING

Shift + right click and choose configure. Use the File menu to import the new version 


FEATURES

Fast and lightweight script

Compatible with default user interface (DUI) & columns user interface (CUI)

Supports transparency (requires CUI & panel stack splitter or similar)

Customisable media library views. Use // to separate name & | to separate branches. Existing views can be edited or new ones added in panel properties

Multi-value tag support. Use %<field>% syntax for fields to be split, e.g. %<genre>%

Accurate filter & search: text and queries (e.g. artist HAS beatles). All give sorted results so that query sort operations are N/A. Search and filter can be hidden

Filtering is done before the tree is populated, enabling the tree to comprise different sub-populations of the library. Filters also offer quick access to commonly used queries. Filters are customisable in panel properties. Use // to separate name from query. Existing filters can be edited or new ones added. Supports $nowplaying{} for dynamic filtering based on nowplaying track (see below for example)

Search looks for items in the populated tree

Drag and drop

$nodisplay{} option. For use in view pattern. Enables use of extra sorting and grouping without display of the sort item (see below for example)

Smooth scrolling 

Discrete scrollbar by default; can be resized / hidden. Other scrollbar types including windows themed are available. Scroll step is configurable (touchpads are likely to work best with a step of 1). For page scroll, click on scrollbar, set scroll step to page or use PgDn/PgUp

Touch control 

Colours and fonts: set in foobar2000 preferences for DUI or CUI

Font size: set with DUI or CUI list font or use zoom feature (zoom resets if UI list font size changed)

Zoom feature. For independent zooming of font size, node & filter use mouse-over with CTRL + ALT + mouse wheel. If touch control is enabled, CTRL + ALT + diagonal pinch can be used to zoom all 

Tooltip font size: set with "Zoom Tooltip (%)" in panel properties

Extra custom colour options:
1) panel properties: includes the ability to set all colours individually
2) $colour{normal,hover,selected} syntax for setting different colours for parts of a line of text. For use in view pattern (see below for details and example)

Customisable node icons: style and colour

Keystroke "jump" search

Arrow key navigation + ctrl & shift selection

Customisable single & double click actions

Nowplaying highlight option 

Remember Tree State. Options to remember expanded nodes, search, filter & selection state on closing / opening foobar2000 or for all views individually

Full context menu on right click, where required, else right click directly shows available media library views and options. Offers expand item that fully expands nodes (N/A for large nodes)

Configurable root node

Item count options: either number of independent tracks (pinned using file path) or sub-items

Full line selection option [gives full context menu]

Views. The pattern determines the branches displayed and the tree sort order. To hide leaves, turn off menu > options > show > tracks

Dark, blend & light theme presets + option to show cover as background

Tree: Auto Expand option


PANEL PROPERTIES

Panel properties has extra options, e.g.

Colour, node, scrollbar and sizing choices

Playlist: Custom Sort. Leave blank to send tracks to playlists in the default order. If an entry is present (use title formatting), tracks are sent to playlists according to the specified sort order. Example sort: %album artist%|%date%|%album%|[[%discnumber%.]%tracknumber%. ][%track artist% - ]%title%. Can also be used where "View... Name // Pattern" omits items you wish to sort by

Access panel properties either directly by right click or via options if the context menu is showing

*** ALWAY ENSURE COMMA "," SEPARATORS ARE RETAINED WHERE USED IN PANEL PROPERTIES ***

If you break a panel property, it can be reset by delete -> apply


GENERAL

EXPAND/COLLAPSE PANEL WITH ROOT NODE (ALL MUSIC)
Expand/collapse of root node can be set to change panel height, e.g. so library tree only occupies a small space when not actively used. In this mode, typing in search also auto-expands the panel. Enable and set expand/collapse sizes in panel properties (ADV.Height...). If the feature is used, note the following requirements and recommendations:
  - Back-up layouts in case of unwanted sizing effects
  - Must be another panel above or below library tree
  - Root node has to be enabled (menu > options > root node)
  - N/A if library tree is in a panel stack splitter container


TOUCH SCROLLING
Depending on how a touch screen is used, touch scrolling may work best if "Single Click Action" isn't used to send items to a playlist (menu > options)


HOT KEYS
Extra hot keys are user assignable with the Spider Monkey panel index method:
1) Set index by right click > panel properties > "ADV.Hot Key..."
2) Go to foobar2000 preferences > keyboard shortcuts & assign the Spider Monkey panel index to a key or key combination.
Can be set for "Add to Playlist"*, "Insert in Playlist"*, "Search", "Clear Search" & Collapse All". * these are likely to work best if "Single Click Action" isn't used to send items to a playlist (menu > options)

CUSTOM ICONS
Availability may depend on fonts installed. The icon font can be set in panel properties. Font symbols can be pasted in. Recommended icon fonts are: Segoe UI Symbol, Segoe MDL2 Assets, FontAwesome, Guifx v2 Transports and Wingdings series. The vertical offset & gap provide small adjustment sufficient for fine tuning icon position

MENU "EXPAND" & TREE "AUTO EXPAND"
Default limits are 500 & 350 tracks, respectively. This is for efficiency reasons & because expanding to large lists impedes navigation. Thresholds can be changed in: "ADV.Limit..." in panel properties: don't set too high depending on pc speed etc

LIBRARY SYNCHONISATION
Default provides automatic synchronisation with changes to the library. If preferred "ADV. Library Sync..." (panel properties) can be set to synchronise only on initialisation (i.e. on start up & changing library view [manual refresh becomes available]) 


SPECIAL FUNCTIONS

These use {} to signify they involve evaluation by library tree.

$nodisplay{X} 
For use in view pattern. Enables sorting and grouping by X without display of X. Example:
View by artist // %artist%|$nodisplay{$sub(99999,%date%) }%album%[ '['%date%']']|$nodisplay{%tracknumber%}[%track artist% - ]%title%
Albums: sorted by DATE, latest first; date displayed after album. Tracks: sorted by %tracknumber%; %tracknumber% not displayed. Branches differing only in $nodisplay are also separately grouped

$colour{normal,hover,selected}
For use in view patterns. Enables setting different colours for parts of a line of text. All colours are optional: any undefined are set to default. Colours apply after the $colour code until either another $colour code is encountered or a branch point is reached (| in the view pattern) 

Normal, hover & selected can either be r-g-b or a highlight or dim indicator, e.g.
$colour{r-g-b,r-g-b,r-g-b} or $colour{-,++,+++}

Highlight & dim indicators:

- dim text
-- dimmer text
--- dimmest text
+ bright text
++ brighter text
+++ brightest text

Format, r-g-b & -/+ style, can be mixed in same $colour{} function

Examples:
$colour{} reset all colours to defaults
$colour{255-0-0} set normal text colour to red; set hover & selected text colours to defaults since undefined
$colour{,,+++} set selected text colour to brightest; set normal & hover text colours to defaults since undefined
$colour{0-255-0,++} set normal text colour to green & hover text colour to brighter; set selected text colour to default since undefined
$colour{255-0-0,0-255-0,0-255-255} set normal, hover and selected text colours to red, green & cyan, respectively

Example pattern:
View by Artist - Album // $colour{-}%album artist%[$colour{+} - %album%][$colour{96-127-127} - '['%date%']'][$colour{111-132-138} - %genre%]$colour{--}|[[%discnumber%.]$colour{--,++,0-192-192}%tracknumber%. ]$colour{-,++,0-228-228}[%track artist% - ]%title%

Item counts are a special case. They don't form part of the view pattern.
	Align right: drawn separately; not controlled by $colour codes; already dimmed
	End of text: effected by $colour codes. Use $colour{} at the end of the line to reset or set to a different colour if desired ($colour{--} is used in the example above)

$nowplaying{X}
For use in filter queries. Returns value of X for the playing track. Example:
artist IS $nowplaying{$meta(artist,0)} => tree displays tracks by nowplaying artist 

$swapbranchprefix{X} Moves prefixes to the end of X
$stripbranchprefix{X} Removes prefixes from X
For use in view pattern. These work like $swapprefix & $stripprefix but, additionally, can operate on all values in multi-value tags. Specify prefixes in panel properties: ADV.Prefixes to Strip or Swap ... (default prefixes: A + The) 

Example
Artist Tag = A Flock Of Seagulls; Cream; Pink Floyd; The Beatles; The Rolling Stones; The Who

$swapbranchprefix{%<artist>%}
Gives multiple branches:
Beatles, The
Cream
Flock Of Seagulls, A
Pink Floyd
Rolling Stones, The
Who, The

$stripbranchprefix {%<artist>%}
Gives multiple branches:
Beatles
Cream
Flock Of Seagulls
Pink Floyd
Rolling Stones
Who

Full title formatting is supported. If X evaluates to, or is in standard syntax, i.e. %field%, multi-value tags aren't split and the behaviour is the same as $swapprefix & $stripprefix 

$nodisplay & $colour are generally unsafe inside string manipulation functions that remove a part of a string or insert a substring by position. Instead, they should be put before the string function,
e.g.
use $colour(255-0-0)$substr(str,from,to) not $substr($colour(255-0-0)str,from,to);
use $colour{0-255-0}$swapbranchprefix{%<artist>%} not $swapbranchprefix{$colour{0-255-0}%<artist>%}


ACKNOWLEDGEMENTS 

Thanks to TheQwertiest for the development of Spider Monkey panel and to marc2k3 and T.P.Wang for the original JScript and WSH panels. Thanks also to the coders of DUI album list (Peter), CUI album list panel (musicmusic) and foo_uie_library_tree (ssenna) for showing the things that a modern library viewer should encompass. Credit also to the ideas and contribution of thanhdat in showing how it was possible to code a library view in wsh panel and the inspiration this afforded. Finally, acknowledgement to falstaff for the original image drawing code that is adapted herein
